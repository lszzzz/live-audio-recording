server {
    listen 80;
    server_name tekrajpant.com.np www.tekrajpant.com.np;
    return 301 https://$host$request_uri;
}
server{
     listen 443 ssl;
    listen [::]:443 ssl;
    server_name tekrajpant.com.np;

   ssl_certificate /etc/letsencrypt/live/tekrajpant.com.np/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/tekrajpant.com.np/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    # Reverse proxy for /recorder/
    location /recorder/ {
# Handle WebSocket connections
    proxy_pass http://localhost:5050/;
    proxy_http_version 1.1;  # Use HTTP/1.1 for WebSocket support
    proxy_set_header Upgrade $http_upgrade;  # Handle WebSocket upgrade
    proxy_set_header Connection "upgrade";    # Handle WebSocket connection upgrade

    # Handle regular HTTP requests
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;

    # Ensure proper URI rewriting for both WebSocket and regular HTTP
    rewrite ^/recorder/(.*)$ /$1 break;

    }
     # Reverse proxy for /transcriber/
    location /transcriber/ {
        proxy_pass http://localhost:5555/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        rewrite ^/transcriber(.*)$ $1 break;
    }

    # Reverse proxy for everything else
    location / {
        proxy_pass http://localhost:3000/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}